[
    {
        "label": "psycopg2",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "psycopg2",
        "description": "psycopg2",
        "detail": "psycopg2",
        "documentation": {}
    },
    {
        "label": "location_units",
        "importPath": "convert",
        "description": "convert",
        "isExtraImport": true,
        "detail": "convert",
        "documentation": {}
    },
    {
        "label": "csv",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "csv",
        "description": "csv",
        "detail": "csv",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "mexico_csv_to_location_units",
        "importPath": "mexico",
        "description": "mexico",
        "isExtraImport": true,
        "detail": "mexico",
        "documentation": {}
    },
    {
        "label": "csv_to_location_units",
        "importPath": "usa",
        "description": "usa",
        "isExtraImport": true,
        "detail": "usa",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DateTime",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "create_engine",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DateTime",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "declarative_base",
        "importPath": "sqlalchemy.ext.declarative",
        "description": "sqlalchemy.ext.declarative",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.declarative",
        "documentation": {}
    },
    {
        "label": "declarative_base",
        "importPath": "sqlalchemy.ext.declarative",
        "description": "sqlalchemy.ext.declarative",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.declarative",
        "documentation": {}
    },
    {
        "label": "enum",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "enum",
        "description": "enum",
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "sessionmaker",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "func",
        "importPath": "sqlalchemy.sql",
        "description": "sqlalchemy.sql",
        "isExtraImport": true,
        "detail": "sqlalchemy.sql",
        "documentation": {}
    },
    {
        "label": "LocationUnitType",
        "importPath": "models",
        "description": "models",
        "isExtraImport": true,
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "location_units_1",
        "kind": 5,
        "importPath": "All.connectSql",
        "description": "All.connectSql",
        "peekOfCode": "location_units_1 = location_units(\"Singapore.csv\", \"5ecad5a8-81bf-44fb-90f1-36cbdd59b703\", \"district\")\nlocation_units_2 = location_units(\"Canada.csv\", \"5a614100-e51a-4cfa-84b8-ba203ebe3674\", \"state\")\nlocation_units_3 = location_units(\"China.csv\", \"53220cdc-360a-4219-985c-33d3e693584d\", \"state\")\nlocation_units_4 = location_units(\"HongKong.csv\", \"3b8de987-60d0-46d1-bc4b-c4bc829ec2ec\", \"district\")\nlocation_units_5 = location_units(\"India.csv\", \"6e4118e5-9728-4fbb-b216-8a5a75d677ac\", \"state\")\nlocation_units_6 = location_units(\"Malaysia.csv\", \"7f13095c-c5d9-4bcd-b37c-d3bab2c0edb4\", \"state\")\nlocation_units_7 = location_units(\"Thailand.csv\", \"fe3374c2-fce1-4a01-8a74-8420a25112fa\", \"state\")\nlocation_units = location_units_1 + location_units_2 + location_units_3 + location_units_4 + location_units_5 + location_units_6 + location_units_7\nconn = psycopg2.connect(\n    host=\"14.225.218.96\",",
        "detail": "All.connectSql",
        "documentation": {}
    },
    {
        "label": "location_units_2",
        "kind": 5,
        "importPath": "All.connectSql",
        "description": "All.connectSql",
        "peekOfCode": "location_units_2 = location_units(\"Canada.csv\", \"5a614100-e51a-4cfa-84b8-ba203ebe3674\", \"state\")\nlocation_units_3 = location_units(\"China.csv\", \"53220cdc-360a-4219-985c-33d3e693584d\", \"state\")\nlocation_units_4 = location_units(\"HongKong.csv\", \"3b8de987-60d0-46d1-bc4b-c4bc829ec2ec\", \"district\")\nlocation_units_5 = location_units(\"India.csv\", \"6e4118e5-9728-4fbb-b216-8a5a75d677ac\", \"state\")\nlocation_units_6 = location_units(\"Malaysia.csv\", \"7f13095c-c5d9-4bcd-b37c-d3bab2c0edb4\", \"state\")\nlocation_units_7 = location_units(\"Thailand.csv\", \"fe3374c2-fce1-4a01-8a74-8420a25112fa\", \"state\")\nlocation_units = location_units_1 + location_units_2 + location_units_3 + location_units_4 + location_units_5 + location_units_6 + location_units_7\nconn = psycopg2.connect(\n    host=\"14.225.218.96\",\n    port=5432,",
        "detail": "All.connectSql",
        "documentation": {}
    },
    {
        "label": "location_units_3",
        "kind": 5,
        "importPath": "All.connectSql",
        "description": "All.connectSql",
        "peekOfCode": "location_units_3 = location_units(\"China.csv\", \"53220cdc-360a-4219-985c-33d3e693584d\", \"state\")\nlocation_units_4 = location_units(\"HongKong.csv\", \"3b8de987-60d0-46d1-bc4b-c4bc829ec2ec\", \"district\")\nlocation_units_5 = location_units(\"India.csv\", \"6e4118e5-9728-4fbb-b216-8a5a75d677ac\", \"state\")\nlocation_units_6 = location_units(\"Malaysia.csv\", \"7f13095c-c5d9-4bcd-b37c-d3bab2c0edb4\", \"state\")\nlocation_units_7 = location_units(\"Thailand.csv\", \"fe3374c2-fce1-4a01-8a74-8420a25112fa\", \"state\")\nlocation_units = location_units_1 + location_units_2 + location_units_3 + location_units_4 + location_units_5 + location_units_6 + location_units_7\nconn = psycopg2.connect(\n    host=\"14.225.218.96\",\n    port=5432,\n    database=\"NFT\",",
        "detail": "All.connectSql",
        "documentation": {}
    },
    {
        "label": "location_units_4",
        "kind": 5,
        "importPath": "All.connectSql",
        "description": "All.connectSql",
        "peekOfCode": "location_units_4 = location_units(\"HongKong.csv\", \"3b8de987-60d0-46d1-bc4b-c4bc829ec2ec\", \"district\")\nlocation_units_5 = location_units(\"India.csv\", \"6e4118e5-9728-4fbb-b216-8a5a75d677ac\", \"state\")\nlocation_units_6 = location_units(\"Malaysia.csv\", \"7f13095c-c5d9-4bcd-b37c-d3bab2c0edb4\", \"state\")\nlocation_units_7 = location_units(\"Thailand.csv\", \"fe3374c2-fce1-4a01-8a74-8420a25112fa\", \"state\")\nlocation_units = location_units_1 + location_units_2 + location_units_3 + location_units_4 + location_units_5 + location_units_6 + location_units_7\nconn = psycopg2.connect(\n    host=\"14.225.218.96\",\n    port=5432,\n    database=\"NFT\",\n    user=\"postgres\",",
        "detail": "All.connectSql",
        "documentation": {}
    },
    {
        "label": "location_units_5",
        "kind": 5,
        "importPath": "All.connectSql",
        "description": "All.connectSql",
        "peekOfCode": "location_units_5 = location_units(\"India.csv\", \"6e4118e5-9728-4fbb-b216-8a5a75d677ac\", \"state\")\nlocation_units_6 = location_units(\"Malaysia.csv\", \"7f13095c-c5d9-4bcd-b37c-d3bab2c0edb4\", \"state\")\nlocation_units_7 = location_units(\"Thailand.csv\", \"fe3374c2-fce1-4a01-8a74-8420a25112fa\", \"state\")\nlocation_units = location_units_1 + location_units_2 + location_units_3 + location_units_4 + location_units_5 + location_units_6 + location_units_7\nconn = psycopg2.connect(\n    host=\"14.225.218.96\",\n    port=5432,\n    database=\"NFT\",\n    user=\"postgres\",\n    password=\"Admin@123\"",
        "detail": "All.connectSql",
        "documentation": {}
    },
    {
        "label": "location_units_6",
        "kind": 5,
        "importPath": "All.connectSql",
        "description": "All.connectSql",
        "peekOfCode": "location_units_6 = location_units(\"Malaysia.csv\", \"7f13095c-c5d9-4bcd-b37c-d3bab2c0edb4\", \"state\")\nlocation_units_7 = location_units(\"Thailand.csv\", \"fe3374c2-fce1-4a01-8a74-8420a25112fa\", \"state\")\nlocation_units = location_units_1 + location_units_2 + location_units_3 + location_units_4 + location_units_5 + location_units_6 + location_units_7\nconn = psycopg2.connect(\n    host=\"14.225.218.96\",\n    port=5432,\n    database=\"NFT\",\n    user=\"postgres\",\n    password=\"Admin@123\"\n)",
        "detail": "All.connectSql",
        "documentation": {}
    },
    {
        "label": "location_units_7",
        "kind": 5,
        "importPath": "All.connectSql",
        "description": "All.connectSql",
        "peekOfCode": "location_units_7 = location_units(\"Thailand.csv\", \"fe3374c2-fce1-4a01-8a74-8420a25112fa\", \"state\")\nlocation_units = location_units_1 + location_units_2 + location_units_3 + location_units_4 + location_units_5 + location_units_6 + location_units_7\nconn = psycopg2.connect(\n    host=\"14.225.218.96\",\n    port=5432,\n    database=\"NFT\",\n    user=\"postgres\",\n    password=\"Admin@123\"\n)\ncur = conn.cursor()",
        "detail": "All.connectSql",
        "documentation": {}
    },
    {
        "label": "location_units",
        "kind": 5,
        "importPath": "All.connectSql",
        "description": "All.connectSql",
        "peekOfCode": "location_units = location_units_1 + location_units_2 + location_units_3 + location_units_4 + location_units_5 + location_units_6 + location_units_7\nconn = psycopg2.connect(\n    host=\"14.225.218.96\",\n    port=5432,\n    database=\"NFT\",\n    user=\"postgres\",\n    password=\"Admin@123\"\n)\ncur = conn.cursor()\nfor unit in location_units:",
        "detail": "All.connectSql",
        "documentation": {}
    },
    {
        "label": "conn",
        "kind": 5,
        "importPath": "All.connectSql",
        "description": "All.connectSql",
        "peekOfCode": "conn = psycopg2.connect(\n    host=\"14.225.218.96\",\n    port=5432,\n    database=\"NFT\",\n    user=\"postgres\",\n    password=\"Admin@123\"\n)\ncur = conn.cursor()\nfor unit in location_units:\n    print(unit)",
        "detail": "All.connectSql",
        "documentation": {}
    },
    {
        "label": "cur",
        "kind": 5,
        "importPath": "All.connectSql",
        "description": "All.connectSql",
        "peekOfCode": "cur = conn.cursor()\nfor unit in location_units:\n    print(unit)\n    cur.execute(\"\"\"\n        INSERT INTO location_unit (id, name, type, country_id, parent_id)\n        VALUES (%s, %s, %s, %s, %s)\n    \"\"\", (unit[\"id\"], unit[\"name\"], unit[\"type\"], unit[\"country_id\"], None if unit[\"parent_id\"] == \"null\" else unit[\"parent_id\"]))\nconn.commit()\ncur.close()\nconn.close()",
        "detail": "All.connectSql",
        "documentation": {}
    },
    {
        "label": "location_units",
        "kind": 2,
        "importPath": "All.convert",
        "description": "All.convert",
        "peekOfCode": "def location_units(file_path, country_id, type_unit):\n    units = []\n    with open(file_path, mode=\"r\", encoding=\"utf-8\") as f:\n        reader = csv.DictReader(f)\n        for row in reader:\n            type = row[\"type\"].strip()\n            # nếu state chưa có -> thêm state\n            if type == type_unit:\n                units.append({\n                    \"id\": row[\"id\"].strip(),",
        "detail": "All.convert",
        "documentation": {}
    },
    {
        "label": "location_units",
        "kind": 5,
        "importPath": "Mexico.connectSql",
        "description": "Mexico.connectSql",
        "peekOfCode": "location_units = mexico_csv_to_location_units(\"municipalities_mexico.csv\")\nprint(len(location_units))\nconn = psycopg2.connect(\n    host=\"14.225.218.96\",\n    port=5432,\n    database=\"NFT\",\n    user=\"postgres\",\n    password=\"Admin@123\"\n)\ncur = conn.cursor()",
        "detail": "Mexico.connectSql",
        "documentation": {}
    },
    {
        "label": "conn",
        "kind": 5,
        "importPath": "Mexico.connectSql",
        "description": "Mexico.connectSql",
        "peekOfCode": "conn = psycopg2.connect(\n    host=\"14.225.218.96\",\n    port=5432,\n    database=\"NFT\",\n    user=\"postgres\",\n    password=\"Admin@123\"\n)\ncur = conn.cursor()\nfor unit in location_units:\n    print(unit)",
        "detail": "Mexico.connectSql",
        "documentation": {}
    },
    {
        "label": "cur",
        "kind": 5,
        "importPath": "Mexico.connectSql",
        "description": "Mexico.connectSql",
        "peekOfCode": "cur = conn.cursor()\nfor unit in location_units:\n    print(unit)\n    cur.execute(\"\"\"\n        INSERT INTO location_unit (id, name, type, country_id, parent_id)\n        VALUES (%s, %s, %s, %s, %s)\n    \"\"\", (unit[\"id\"], unit[\"name\"], unit[\"type\"], unit[\"country_id\"], unit[\"parent_id\"]))\nconn.commit()\ncur.close()\nconn.close()",
        "detail": "Mexico.connectSql",
        "documentation": {}
    },
    {
        "label": "mexico_csv_to_location_units",
        "kind": 2,
        "importPath": "Mexico.mexico",
        "description": "Mexico.mexico",
        "peekOfCode": "def mexico_csv_to_location_units(file_path):\n    states = {}\n    units = []\n    with open(file_path, mode=\"r\", encoding=\"utf-8\") as f:\n        reader = csv.DictReader(f)\n        for row in reader:\n            state_name = row[\"State\"].strip()\n            municipality_name = row[\"Municipality\"].strip()\n            # nếu state chưa có -> thêm state\n            if state_name not in states:",
        "detail": "Mexico.mexico",
        "documentation": {}
    },
    {
        "label": "COUNTRY_ID",
        "kind": 5,
        "importPath": "Mexico.mexico",
        "description": "Mexico.mexico",
        "peekOfCode": "COUNTRY_ID = \"5f315fa0-a18c-4383-8c26-28985f9fe3c5\"\ndef mexico_csv_to_location_units(file_path):\n    states = {}\n    units = []\n    with open(file_path, mode=\"r\", encoding=\"utf-8\") as f:\n        reader = csv.DictReader(f)\n        for row in reader:\n            state_name = row[\"State\"].strip()\n            municipality_name = row[\"Municipality\"].strip()\n            # nếu state chưa có -> thêm state",
        "detail": "Mexico.mexico",
        "documentation": {}
    },
    {
        "label": "location_units",
        "kind": 5,
        "importPath": "USA.connectSql",
        "description": "USA.connectSql",
        "peekOfCode": "location_units = csv_to_location_units(\"county.csv\", \"states.csv\", \"independent_cities.csv\")\nprint(len(location_units))\n# conn = psycopg2.connect(\n#     host=\"14.225.218.96\",\n#     port=5432,\n#     database=\"NFT\",\n#     user=\"postgres\",\n#     password=\"Admin@123\"\n# )\n# cur = conn.cursor()",
        "detail": "USA.connectSql",
        "documentation": {}
    },
    {
        "label": "LocationUnitType",
        "kind": 6,
        "importPath": "USA.models",
        "description": "USA.models",
        "peekOfCode": "class LocationUnitType(str, enum.Enum):\n    STATE = \"state\"\n    CITY = \"city\"\n    COUNTY = \"county\"\n    DISTRICT = \"district\"\n    WARD = \"ward\"\nclass LocationUnit(Base):\n    __tablename__ = \"location_unit\"\n    id = Column(String, primary_key=True, default=lambda: str(uuid.uuid4()))\n    name = Column(String, nullable=False)",
        "detail": "USA.models",
        "documentation": {}
    },
    {
        "label": "LocationUnit",
        "kind": 6,
        "importPath": "USA.models",
        "description": "USA.models",
        "peekOfCode": "class LocationUnit(Base):\n    __tablename__ = \"location_unit\"\n    id = Column(String, primary_key=True, default=lambda: str(uuid.uuid4()))\n    name = Column(String, nullable=False)\n    type = Column(Enum(LocationUnitType), nullable=False)\n    country_id = Column(String, ForeignKey(\"country.id\"), nullable=False)\n    parent_id = Column(String, ForeignKey(\"location_unit.id\"), nullable=True)\nclass BaseCounty(Base):\n    __tablename__ = \"base_county\"\n    id = Column(String, primary_key=True, default=lambda: str(uuid.uuid4()))",
        "detail": "USA.models",
        "documentation": {}
    },
    {
        "label": "BaseCounty",
        "kind": 6,
        "importPath": "USA.models",
        "description": "USA.models",
        "peekOfCode": "class BaseCounty(Base):\n    __tablename__ = \"base_county\"\n    id = Column(String, primary_key=True, default=lambda: str(uuid.uuid4()))\n    name = Column(String, nullable=False)\n    type = Column(Enum(LocationUnitType), nullable=False)\n    state_name = Column(String, nullable=False)\ndef __repr__(self):\n        return f\"LocationUnit(name='{self.name}', type='{self.type}', code='{self.code}', parent_code='{self.parent_code}')\"",
        "detail": "USA.models",
        "documentation": {}
    },
    {
        "label": "Base",
        "kind": 5,
        "importPath": "USA.models",
        "description": "USA.models",
        "peekOfCode": "Base = declarative_base()\nclass LocationUnitType(str, enum.Enum):\n    STATE = \"state\"\n    CITY = \"city\"\n    COUNTY = \"county\"\n    DISTRICT = \"district\"\n    WARD = \"ward\"\nclass LocationUnit(Base):\n    __tablename__ = \"location_unit\"\n    id = Column(String, primary_key=True, default=lambda: str(uuid.uuid4()))",
        "detail": "USA.models",
        "documentation": {}
    },
    {
        "label": "LocationUnitType",
        "kind": 6,
        "importPath": "USA.test",
        "description": "USA.test",
        "peekOfCode": "class LocationUnitType(str, enum.Enum):\n    STATE = \"state\"\n    CITY = \"city\"\n    COUNTY = \"county\"\nclass LocationUnit(Base):\n    __tablename__ = \"location_unit\"\n    id = Column(String, primary_key=True, default=lambda: str(uuid.uuid4()))\n    createdAt = Column(DateTime, default=func.now())\n    updatedAt = Column(DateTime, default=func.now(), onupdate=func.now())\n    deletedAt = Column(DateTime, nullable=True)",
        "detail": "USA.test",
        "documentation": {}
    },
    {
        "label": "LocationUnit",
        "kind": 6,
        "importPath": "USA.test",
        "description": "USA.test",
        "peekOfCode": "class LocationUnit(Base):\n    __tablename__ = \"location_unit\"\n    id = Column(String, primary_key=True, default=lambda: str(uuid.uuid4()))\n    createdAt = Column(DateTime, default=func.now())\n    updatedAt = Column(DateTime, default=func.now(), onupdate=func.now())\n    deletedAt = Column(DateTime, nullable=True)\n    name = Column(String, nullable=False)\n    type = Column(String, nullable=False)\n    country_id = Column(String, default=\"53aa936f-cead-427c-93a1-952cfe3f9139\")\n    parent_id = Column(String, ForeignKey(\"location_unit.id\"), nullable=True)",
        "detail": "USA.test",
        "documentation": {}
    },
    {
        "label": "USLocationImporter",
        "kind": 6,
        "importPath": "USA.test",
        "description": "USA.test",
        "peekOfCode": "class USLocationImporter:\n    def __init__(self):\n        # Database connection\n        self.conn = psycopg2.connect(\n            host=\"14.225.218.96\",\n            port=5432,\n            database=\"NFT\",\n            user=\"postgres\",\n            password=\"Admin@123\"\n        )",
        "detail": "USA.test",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "USA.test",
        "description": "USA.test",
        "peekOfCode": "def main():\n    try:\n        importer = USLocationImporter()\n        # Import dữ liệu với giới hạn\n        # limit_states: số bang muốn import\n        # limit_counties: số counties per state  \n        # limit_cities: số cities per county\n        importer.import_all_data()\n    except Exception as e:\n        print(f\"❌ Lỗi: {e}\")",
        "detail": "USA.test",
        "documentation": {}
    },
    {
        "label": "Base",
        "kind": 5,
        "importPath": "USA.test",
        "description": "USA.test",
        "peekOfCode": "Base = declarative_base()\nclass LocationUnitType(str, enum.Enum):\n    STATE = \"state\"\n    CITY = \"city\"\n    COUNTY = \"county\"\nclass LocationUnit(Base):\n    __tablename__ = \"location_unit\"\n    id = Column(String, primary_key=True, default=lambda: str(uuid.uuid4()))\n    createdAt = Column(DateTime, default=func.now())\n    updatedAt = Column(DateTime, default=func.now(), onupdate=func.now())",
        "detail": "USA.test",
        "documentation": {}
    },
    {
        "label": "csv_to_location_units",
        "kind": 2,
        "importPath": "USA.usa",
        "description": "USA.usa",
        "peekOfCode": "def csv_to_location_units(county_file, state_file, independent_city_file):\n    # Read counties\n    units_county = []\n    with open(county_file, mode=\"r\", encoding=\"utf-8\") as f:\n        reader = csv.DictReader(f)\n        for row in reader:\n            if row[\"type\"].lower() == \"county\":\n                unit = {\n                    \"id\": str(uuid.uuid4()),\n                    \"name\": row[\"name\"].strip(),",
        "detail": "USA.usa",
        "documentation": {}
    },
    {
        "label": "COUNTRY_ID",
        "kind": 5,
        "importPath": "USA.usa",
        "description": "USA.usa",
        "peekOfCode": "COUNTRY_ID = '53aa936f-cead-427c-93a1-952cfe3f9139'\ndef csv_to_location_units(county_file, state_file, independent_city_file):\n    # Read counties\n    units_county = []\n    with open(county_file, mode=\"r\", encoding=\"utf-8\") as f:\n        reader = csv.DictReader(f)\n        for row in reader:\n            if row[\"type\"].lower() == \"county\":\n                unit = {\n                    \"id\": str(uuid.uuid4()),",
        "detail": "USA.usa",
        "documentation": {}
    }
]